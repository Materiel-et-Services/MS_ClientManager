{
  "unpublishedCollection": {
    "name": "Values",
    "pageId": "Page1",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tfilterContactsInfo:  (clientArray) => {\n\t\treturn clientArray.map((clientObject) => {\n\t\t\t let object = {}\n    for (const [key,value] of Object.entries(clientObject)) {\n\t\t\tconsole.log(clientObject)\n        if ([\"createdon\",\n        \"modifiedon\",\n        \"cr9c2_telephone\",\n\t\t\t\t\"test_mobile\",\n\t\t\t\t\"test_genre\",\n\t\t\t\t\"test_famille\",\n\t\t\t\t\"test_typedecommunication\",\t\t \n\t\t\t\t\"cr2b8_main_contact\",\n        \"cr9c2_email\",\n        \"cr9c2_name\",\n\t\t\t\t\"cr9c2_contact_clientid\",\n        \"cr9c2_type_contact\"].includes(key) == true) {\n             object[key] = value\n        }\n    }\n    return object\n\t\t})\n\t},\n\tfilterClientInfo:  (clientObject) => {\n\t\t\n    let object = {}\n    for (const [key,value] of Object.entries(clientObject)) {\n        if ([\"cr2b8_clientsunifie_2id\",\n\t\t\t\t\"cr2b8_archived_client\",\n\t\t\t\t\"cr2b8_plafond\",\n        \"cr2b8_creele\",\n        \"cr2b8_codeclient\",\n        \"cr2b8_raisonsocialeclient\",\n        \"cr2b8_adresse\",\n        \"cr2b8_codepostal\",\n        \"cr2b8_sret\",\n        \"cr2b8_ville\"].includes(key) == true) {\n             object[key.replace(\"cr2b8_\",\"\")] = value\n        }\n    }\n    return object\n\n\t},\n\tinitClientsInfos: async () => {\n\t\tawait getOneClient.run({clientCode: appsmith.store.clientCode})\n\t\treturn Values.filterClientInfo(getOneClient.data.value[0])\n\t},\n\tinitApp: async () => {\n\t\tisArchivedIncluded.isChecked === true ? await storeValue(\"withArchive\",\"cr2b8_archived_client ne null\",false) : await storeValue(\"withArchive\",\"cr2b8_archived_client eq false\",false)\n\t\t\n\t\tif(appsmith.store.jwt != undefined) {\n\t\t\tconsole.log(appsmith.store)\n\t\t\treturn getAllClients.run()\n\t\t.then(async () => {\n\t\t\tif (Object.keys(appsmith.URL.queryParams).includes(\"clientCode\") === true) {\n\t\t\t\t await storeValue(\"clientCode\",appsmith.URL.queryParams.clientCode,false)\n\t\t\t} else {\n\t\t\t\t await storeValue(\"clientCode\",getAllClients.data.value[0].cr2b8_codeclient,false)\n\t\t\t}\n\t\t\t\t//Object.keys(appsmith.URL.queryParams).includes(\"clientCode\") === true ?  await storeValue(\"clientCode\",appsmith.URL.queryParams.clientCode,false) :  await storeValue(\"clientCode\",getAllClients.data.value[0].cr2b8_codeclient,false)\n\t\t\n\t\t\t\n\t\t\n\t\t\t}\n\t\t)\n\t\t.then(() => {\n\t\t\t\n\t\t getOneClient.run({clientCode:appsmith.store.clientCode})})\n\t\t.then(async () => {\n\t\t\tlet optionsContainer = {}\n\t\tawait GetOptions.run({options:\"cr9c2_type_de_contacts\"})\n\t\toptionsContainer.contactOptions = Values.remapOptions(GetOptions.data.Options)\n\t\t\t\tconsole.log(optionsContainer)\n\t\tawait GetOptions.run({options:\"test_genre\"})\n\t\toptionsContainer.genreOptions = Values.remapOptions(GetOptions.data.Options)\n\t\t\t\tconsole.log(optionsContainer)\n\t\tawait GetOptions.run({options:\"test_typedecommunication\"})\n\t\toptionsContainer.communicationsOptions = Values.remapOptions(GetOptions.data.Options)\n\t\t\t\tconsole.log(optionsContainer)\n\t\tawait GetOptions.run({options:\"test_famille\"})\n\t\toptionsContainer.familleOptions = Values.remapOptions(GetOptions.data.Options)\n\t\t\t\t\n\t\tawait storeValue(\"optionsObject\",optionsContainer,false)\n\t\t})\n\t\t} else {\n\t\t\tconsole.log(\"test2\")\n\t\t\tnavigateTo(\"Login\")\n\t\t}\n\t\t\n\t\t\n\t},\n\tremapObject: (element) => {\n\t\treturn element.map((element) => {\nreturn {\n\tvalue: element.cr2b8_codeclient,\n\tlabel:element.cr2b8_raisonsocialeclient,}\n\t})\n\t},\n\tremapOptions: (element) => {\n\t\t return element.map((element) => {\nreturn {\n\tvalue: element.Value,\n\tlabel:element.Label.UserLocalizedLabel.Label}\n\t})\n\t},\n\tmyFun2: async () => {\n\t\t//use async-await or promises\n\t}\n}",
    "variables": [],
    "userPermissions": []
  },
  "id": "Page1_Values",
  "deleted": false,
  "gitSyncId": "632ae49cf774ad2bde7b789b_632afa09e3c0dc3a8257b7cf"
}