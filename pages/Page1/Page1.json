{
  "unpublishedPage": {
    "name": "Page1",
    "slug": "page1",
    "customSlug": "",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 4896,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 960,
          "containerStyle": "none",
          "snapRows": 125,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 89,
          "minHeight": 1292,
          "dynamicTriggerPathList": [],
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "Page1_Values.initApp",
              "name": "Values.initApp",
              "collectionId": "Page1_Values",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  isArchivedIncluded.isChecked === true ? await storeValue(\"withArchive\", \"cr2b8_archived_client ne null\", false) : await storeValue(\"withArchive\", \"cr2b8_archived_client eq false\", false);\n  console.log(appsmith.store);\n  if (appsmith.store.jwt != undefined) {\n    return await getAllClients.run().then(async () => {\n      if (Object.keys(appsmith.URL.queryParams).includes(\"clientCode\") === true) {\n        await storeValue(\"clientCode\", appsmith.URL.queryParams.clientCode, false);\n      } else {\n        await storeValue(\"clientCode\", getAllClients.data.value[0].cr2b8_codeclient, false);\n      }\n    }).then(async () => {\n      await getOneClient.run({\n        clientCode: appsmith.store.clientCode\n      });\n    }).then(async () => {\n      let optionsContainer = {};\n      await GetOptions.run({\n        options: \"cr9c2_type_de_contacts\"\n      });\n      console.log(1);\n      optionsContainer.contactOptions = Values.remapOptions(GetOptions.data.Options);\n      await GetOptions.run({\n        options: \"test_genre\"\n      });\n      console.log(2);\n      optionsContainer.genreOptions = Values.remapOptions(GetOptions.data.Options);\n      await GetOptions.run({\n        options: \"test_typedecommunication\"\n      });\n      console.log(3);\n      optionsContainer.communicationsOptions = Values.remapOptions(GetOptions.data.Options);\n      await GetOptions.run({\n        options: \"test_famille\"\n      });\n      console.log(4);\n      optionsContainer.familleOptions = Values.remapOptions(GetOptions.data.Options);\n      await GetOptions.run({\n        options: \"matserv_depot\"\n      });\n      optionsContainer.depotOptions = Values.remapOptions(GetOptions.data.Options);\n      await storeValue(\"optionsObject\", optionsContainer, false);\n    });\n  } else {\n    console.log(\"test2\");\n    navigateTo(\"Login\");\n  }\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "Page1",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": true
  },
  "deleted": false,
  "gitSyncId": "632ae49cf774ad2bde7b789b_632ae49cf774ad2bde7b789d"
}